#!/bin/sh
# -----------------------------------------------------------------------------
# palm-run [-d DEVICE] [-L] [-o DIRECTORY] [-p excludes.file] [directory | ipk]
#
#   This command packages, installs, and then looks at the logs for a webOS
#   application that you are developing.
#
#   -d DEVICE: Defaults to installing to the first device
#   -I       : By default palm-launch uses -i for inspector
#   -L       : By default the palm-log command is run. This suppresses that
#   -o OUTPUT: By default the ipk is generated to /tmp
#   -p exfile: By default looks for 'excludes.txt' file
#
# Usage examples:
# 
#   palm-run ~/myproject # deploy from /tmp to emulator
#   palm-run -d usb -L -o /packages ~/myproject
#   palm-run /path/to/com.palm.app.videogallery_1.0.1_all.ipk 
#            # has to be in the format of path/ID_VERSION.ipk
#   palm-run -d tcp -p myexcludes.txt
#            # use the emulator and package with exclude_from myexcludes.txt
#   palm-run # use the current directory and all the defaults
# -----------------------------------------------------------------------------

# -- Configuration settings
device=""
runlog="true"
appdir=$PWD
appfilename=""
exclude_from=""
exclude_file="excludes.txt"
outputdir=/tmp
production="false"
inspector="-i"
numcount=0

# read in the command line arguments
while getopts "d:o:p:ILP" opt; do
    case $opt in
        d)
            device="-d $OPTARG"
            let numcount=numcount+2
            ;;
        I)
            inspector=""
            let numcount=numcount+1
            ;;
        o)
            outputdir=$OPTARG
            let numcount=numcount+2
            ;;
        p)
            exclude_file=$OPTARG
            let numcount=numcount+2
            ;;
        P)
            production="true"
            let numcount=numcount+1
            ;;
        L)
            runlog="false"
            let numcount=numcount+1
            ;;
    esac
done

# shift over all of the arguments
shift $numcount

# if we have arguments left we have the directory we need
if [ $# -gt 0 ]; then
    appdir=$1
fi

# -- If it is a file, then it should be a ipk file
# has to use the name: /path/to/ID_VERSION.ipk
if [ -f $appdir ]; then
    appfilename=$appdir
    id=$(echo $appfilename | perl -e '@a = split "/", <>; ($id) = split "_", @a[-1]; chomp($id); print $id')
# not a file, so test for the directory and package
else
    # -- Get testing for the application directory and appinfo.json file to make sure this is a webOS app
    if [ ! -d "$appdir" ]; then
        echo "No application directory found at $appdir"
        exit
    fi

    if [ ! -e "$appdir/appinfo.json" ]; then
        echo "No appinfo.json file found at $appdir/appinfo.json. This must not be a webOS application"
        exit
    fi

    # setup trim
    trim() { echo $1; }

    # grab the id out of the appinfo file
    id=`grep \"id\" $appdir/appinfo.json`
    id=${id//\"id\": \"/} # strip the beginning id
    id=${id/%,/}
    id=${id/%\"/} # take out the end
    id=$(trim $id)

    # grab the version out of the appinfo file
    version=`grep \"version\" $appdir/appinfo.json`
    version=${version//\"version\": \"/} # strip the beginning id
    version=${version/%,/}
    version=${version/%\"/} # take out the end
    version=$(trim $version)

    # TODO
    #  if production, copy the production config over    
    #  else, if development, copy the dev config over
    
    # if an exclusion file is found, --exclude-from it
    if [ -e "$appdir/$exclude_file" ]; then
        exclude_from="--exclude-from=$exclude_file"
    fi

    cmd_package="palm-package -o $outputdir $exclude_from $appdir"
    echo "=====> $cmd_package"
    package_return=`$cmd_package 2>&1`

    if [[ $package_return =~ "creating package" ]]; then
        echo $package_return
    else
        echo $package_return
        echo "\nDue to palm-package error, aborting."
        exit
    fi
    
    appfilename=$outputdir/${id}_${version}*.ipk
fi

echo "\n=====> palm-remove -r $id"
palm-install -r $id

# -- Run the commands
cmd_install="palm-install $device $appfilename"
echo "\n=====> $cmd_install"
install_return=`$cmd_install 2>&1`

if [[ $install_return =~ "palm-install: no device" ]]; then
    if [ "$device" == "-d usb" ]; then
        echo "Unable to connect to the phone.  Make sure that it is plugged into USB and in developer mode."
    else
        echo "Unable to connect to the emulator.  Make sure that it is running."
    fi
    exit
else 
    echo $install_return
fi

if [ $runlog == "true" ]; then
    set -m
    echo "\n=====> palm-log -f -d $device $id"
    palm-log -f -d $device $id &
fi

cmd_launch="palm-launch $device $inspector $id"
echo "\n=====> $cmd_launch"
$cmd_launch

if [ $runlog == "true" ]; then
    fg
fi
